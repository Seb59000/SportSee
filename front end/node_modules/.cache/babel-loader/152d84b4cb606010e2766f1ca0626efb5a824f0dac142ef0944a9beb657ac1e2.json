{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\Documents\\\\Documents\\\\Openclassrooms\\\\P12\\\\SportSee\\\\sportsee\\\\src\\\\components\\\\simpleLineChart\\\\SimpleLineChart.jsx\";\nimport './SimpleLineChart.css';\nimport mock from '../../data/mock.json';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-label\",\n        children: `${payload[0].value}Kg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-label\",\n        children: `${payload[1].value}Kcal`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst CustomTick = ({\n  index,\n  x,\n  y\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x - 5,\n    y: y + 10,\n    children: index + 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c2 = CustomTick;\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nfunction SimpleLineChart() {\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    aspect: 3,\n    id: \"simpleBarChart\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 300,\n      height: 100,\n      data: mock.data.averageSessions,\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        type: \"linear\",\n        dataKey: \"sessionLength\",\n        stroke: \"#8884d8\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_c3 = SimpleLineChart;\nexport default SimpleLineChart;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"CustomTick\");\n$RefreshReg$(_c3, \"SimpleLineChart\");","map":{"version":3,"names":["mock","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","length","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","CustomTick","index","x","y","_c2","data","name","uv","pv","amt","SimpleLineChart","width","aspect","id","height","averageSessions","type","dataKey","stroke","strokeWidth","_c3","$RefreshReg$"],"sources":["C:/Users/sebas/Documents/Documents/Openclassrooms/P12/SportSee/sportsee/src/components/simpleLineChart/SimpleLineChart.jsx"],"sourcesContent":["import './SimpleLineChart.css';\r\nimport mock from '../../data/mock.json'\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nconst CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n        return (\r\n            <div className=\"tooltip\">\r\n                <p className=\"tooltip-label\">{`${payload[0].value}Kg`}</p>\r\n                <p className=\"tooltip-label\">{`${payload[1].value}Kcal`}</p>\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n};\r\n\r\nconst CustomTick = ({ index, x, y }) => {\r\n\r\n    return (\r\n\r\n        <text x={x - 5} y={y + 10}>\r\n            {index + 1}\r\n        </text>\r\n\r\n    );\r\n};\r\n\r\nconst data = [\r\n    {\r\n        name: 'Page A',\r\n        uv: 4000,\r\n        pv: 2400,\r\n        amt: 2400,\r\n    },\r\n    {\r\n        name: 'Page B',\r\n        uv: 3000,\r\n        pv: 1398,\r\n        amt: 2210,\r\n    },\r\n    {\r\n        name: 'Page C',\r\n        uv: 2000,\r\n        pv: 9800,\r\n        amt: 2290,\r\n    },\r\n    {\r\n        name: 'Page D',\r\n        uv: 2780,\r\n        pv: 3908,\r\n        amt: 2000,\r\n    },\r\n    {\r\n        name: 'Page E',\r\n        uv: 1890,\r\n        pv: 4800,\r\n        amt: 2181,\r\n    },\r\n    {\r\n        name: 'Page F',\r\n        uv: 2390,\r\n        pv: 3800,\r\n        amt: 2500,\r\n    },\r\n    {\r\n        name: 'Page G',\r\n        uv: 3490,\r\n        pv: 4300,\r\n        amt: 2100,\r\n    },\r\n];\r\n\r\nfunction SimpleLineChart() {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" aspect={3} id=\"simpleBarChart\">\r\n            <LineChart width={300} height={100} data={mock.data.averageSessions}>\r\n                <Line type=\"linear\" dataKey=\"sessionLength\" stroke=\"#8884d8\" strokeWidth={2} />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n}\r\n\r\nexport default SimpleLineChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}