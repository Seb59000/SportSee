{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport dataMocked from '../../data/data';\nimport axios from 'axios';\n\n// function DataRetriever() {\n//     const [data, setData] = useState(null);\n\n//     useEffect(() => {\n//         async function fetchData() {\n//             const response = await axios.get('http://localhost:3000/user/12/performance');\n//             setData(response.data.data.data);\n//             console.log(response.data)\n//         }\n//         fetchData();\n//     }, []);\n\n//     const [logementsList, setLogementsList] = useState([])\n//     const [isLoading, setLoading] = useState(true)\n//     const [error, setError] = useState(false)\n\n//     // useEffect(() => {\n//     //     if (!url) return\n//     //     setLoading(true)\n//     //     async function fetchLogements() {\n//     //         try {\n//     //             const response = await fetch(url);\n//     //             const logementsList = await response.json()\n//     //             setLogementsList(logementsList)\n//     //         } catch (err) {\n//     //             console.log('===== error =====', err)\n//     //             setError(true)\n//     //         } finally {\n//     //             setLoading(false)\n//     //         }\n//     //     }\n//     //     fetchLogements()\n//     // }, [url])\n//     return { data, isLoading, logementsList, error }\n// }\n\n// export default DataRetriever\n\n// import axios from 'axios';\n\nconst DataRetriever = async cas => {\n  console.log(cas);\n  let userPerfs;\n  let results = [];\n  switch (cas) {\n    case 1:\n      results.push(dataMocked.USER_PERFORMANCE[0].data);\n      break;\n    case 2:\n      results.push(dataMocked.USER_PERFORMANCE[1].data);\n      break;\n    case 3:\n      const perfs = await axios.get('http://localhost:3000/user/12/performance');\n      // console.log(response.data.data.data)\n      results.push(perfs.data.data.data);\n\n      // userPerfs = data.data.data.data\n      // userPerfs = getUser()\n      break;\n    default:\n      break;\n  }\n  return results;\n};\n_c = DataRetriever;\nexport default DataRetriever;\nvar _c;\n$RefreshReg$(_c, \"DataRetriever\");","map":{"version":3,"names":["useState","useEffect","dataMocked","axios","DataRetriever","cas","console","log","userPerfs","results","push","USER_PERFORMANCE","data","perfs","get","_c","$RefreshReg$"],"sources":["C:/Users/sebas/Documents/Documents/Openclassrooms/P12/SportSee/front end/src/service/dataRetriever.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport dataMocked from '../../data/data'\r\nimport axios from 'axios'\r\n\r\n// function DataRetriever() {\r\n//     const [data, setData] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         async function fetchData() {\r\n//             const response = await axios.get('http://localhost:3000/user/12/performance');\r\n//             setData(response.data.data.data);\r\n//             console.log(response.data)\r\n//         }\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     const [logementsList, setLogementsList] = useState([])\r\n//     const [isLoading, setLoading] = useState(true)\r\n//     const [error, setError] = useState(false)\r\n\r\n//     // useEffect(() => {\r\n//     //     if (!url) return\r\n//     //     setLoading(true)\r\n//     //     async function fetchLogements() {\r\n//     //         try {\r\n//     //             const response = await fetch(url);\r\n//     //             const logementsList = await response.json()\r\n//     //             setLogementsList(logementsList)\r\n//     //         } catch (err) {\r\n//     //             console.log('===== error =====', err)\r\n//     //             setError(true)\r\n//     //         } finally {\r\n//     //             setLoading(false)\r\n//     //         }\r\n//     //     }\r\n//     //     fetchLogements()\r\n//     // }, [url])\r\n//     return { data, isLoading, logementsList, error }\r\n// }\r\n\r\n// export default DataRetriever\r\n\r\n// import axios from 'axios';\r\n\r\nconst DataRetriever = async (cas) => {\r\n    console.log(cas);\r\n    let userPerfs\r\n    let results = []\r\n    switch (cas) {\r\n        case 1:\r\n            results.push(dataMocked.USER_PERFORMANCE[0].data)\r\n            break;\r\n        case 2:\r\n            results.push(dataMocked.USER_PERFORMANCE[1].data)\r\n            break;\r\n        case 3:\r\n            const perfs = await axios.get('http://localhost:3000/user/12/performance')\r\n            // console.log(response.data.data.data)\r\n            results.push(perfs.data.data.data)\r\n\r\n            // userPerfs = data.data.data.data\r\n            // userPerfs = getUser()\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return results\r\n};\r\n\r\nexport default DataRetriever"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAMC,aAAa,GAAG,MAAOC,GAAG,IAAK;EACjCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAChB,IAAIG,SAAS;EACb,IAAIC,OAAO,GAAG,EAAE;EAChB,QAAQJ,GAAG;IACP,KAAK,CAAC;MACFI,OAAO,CAACC,IAAI,CAACR,UAAU,CAACS,gBAAgB,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;MACjD;IACJ,KAAK,CAAC;MACFH,OAAO,CAACC,IAAI,CAACR,UAAU,CAACS,gBAAgB,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;MACjD;IACJ,KAAK,CAAC;MACF,MAAMC,KAAK,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,2CAA2C,CAAC;MAC1E;MACAL,OAAO,CAACC,IAAI,CAACG,KAAK,CAACD,IAAI,CAACA,IAAI,CAACA,IAAI,CAAC;;MAElC;MACA;MACA;IACJ;MACI;EACR;EAEA,OAAOH,OAAO;AAClB,CAAC;AAACM,EAAA,GAxBIX,aAAa;AA0BnB,eAAeA,aAAa;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}